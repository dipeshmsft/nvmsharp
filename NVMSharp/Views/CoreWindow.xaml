<Window
    x:Class="NVMSharp.Views.CoreWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:NVMSharp.Controls"
    xmlns:converters="clr-namespace:NVMSharp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:NVMSharp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wpfspark="clr-namespace:WPFSpark"
    Title="NVM#"
    Width="1000"
    Height="700"
    FontSize="16"
    mc:Ignorable="d">
    <Window.Resources>
        <converters:ContentVisibilityConverter x:Key="ContentVisibilityHelper" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityHelper" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityNegationHelper" IsReverse="True" />
    </Window.Resources>
    <Grid x:Name="RootGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="48" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid
            x:Name="EnVarGrid"
            Grid.Column="1"
            Visibility="{Binding CurrentAppMode, Converter={StaticResource ContentVisibilityHelper}, ConverterParameter=User|System}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="0.2*"
                    MinWidth="300"
                    MaxWidth="500" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="0.8*" MinWidth="200" />
            </Grid.ColumnDefinitions>
            <Rectangle
                Grid.ColumnSpan="3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                />
            <TextBlock
                Margin="10,9,0,9"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="22"
                Foreground="White"
                Text="{Binding AppModeTitle}" />
            <!--  Key Commands  -->
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <!--  Add New  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding NewKeyCommand}"
                    Content="Add.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="New Environment Variable" />
                <!--  Edit  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding EditKeyCommand}"
                    Content="Edit.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Edit Environment Variable" />
                <!--  Copy  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding CopyKeyCommand}"
                    Content="Copy.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Copy Environment Variable" />
                <!--  Delete  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding DeleteKeyCommand}"
                    Content="Delete.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Delete Environment Variable" />

            </StackPanel>

            <!--  KeyValue Commands  -->
            <StackPanel
                Grid.Column="2"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <!--  Add New  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding NewValueCommand}"
                    Content="Add.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Add New Value" />
                <!--  Edit  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding EditValueCommand}"
                    Content="Edit.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Edit Value" />
                <!--  Copy  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding CopyValueCommand}"
                    Content="Copy.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Copy Value" />
                <!--  Move to Top  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding MoveToTopCommand}"
                    Content="MoveToTop.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Move to Top" />
                <!--  Move up  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding MoveUpCommand}"
                    Content="MoveUp.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Move Up" />
                <!--  Move down  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding MoveDownCommand}"
                    Content="MoveDown.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Move Down" />
                <!--  Move to Bottom  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding MoveToBottomCommand}"
                    Content="MoveToBottom.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Move to Bottom" />
                <!--  Reverse Order  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding ReverseValuesCommand}"
                    Content="Reverse.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Reverse Order" />
                <!--  Delete  -->
                <Button
                    Width="48"
                    Height="48"
                    Command="{Binding DeleteValueCommand}"
                    Content="Delete.Glyph"
                    Style="{DynamicResource IconGlyph.Light.ButtonStyle}"
                    ToolTip="Delete Value" />

            </StackPanel>
            <ListView
                Grid.Row="1"
                Grid.Column="0"
                Margin="8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                BorderThickness="0"
                ItemsSource="{Binding Path=DisplayKeys}"
                SelectedValue="{Binding Path=ActiveKey, Mode=TwoWay}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Mode=OneWay}" Margin="8,4" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <!--<GridSplitter
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="1"
                Width="2"
                VerticalAlignment="Stretch"
                ResizeBehavior="PreviousAndNext"
                ResizeDirection="Columns" />-->
            <ListBox
                Grid.Row="1"
                Grid.Column="2"
                Margin="0"
                Padding="0"
                BorderThickness="0"
                ItemsSource="{Binding Path=DisplayValues}"
                SelectedValue="{Binding Path=ActiveValue, Mode=TwoWay}"
                />
        </Grid>
        <Grid
            x:Name="ImportGrid"
            Grid.Column="1"
            Visibility="{Binding CurrentAppMode, Converter={StaticResource ContentVisibilityHelper}, ConverterParameter=Import}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="48" />
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
                <RowDefinition Height="48" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="166" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle
                Grid.ColumnSpan="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                />
            <TextBlock
                Margin="10,9,0,9"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="22"
                Foreground="White"
                Text="{Binding AppModeTitle}" />
            <Button
                x:Name="loadSourceBtn"
                Grid.Row="1"
                Width="150"
                Height="32"
                Margin="8,0"
                HorizontalAlignment="Left"
                Command="{Binding InitImportCommand}"
                Content="Select File to Import"
                FontSize="14"
                IsDefault="true" />
            <TextBlock
                Grid.Row="1"
                Grid.Column="1"
                Margin="4,0"
                VerticalAlignment="Center"
                FontSize="14"
                SizeChanged="OnTextSizeChanged"
                TargetUpdated="OnImportSourceChanged"
                Text="{Binding ImportSource, NotifyOnTargetUpdated=True}"
                TextTrimming="CharacterEllipsis" />
            <Border
                Grid.Row="2"
                Grid.ColumnSpan="2"
                 />
            <Border
                Grid.Row="2"
                Grid.ColumnSpan="2"
                
                Visibility="{Binding Path=HasInitImportStatus, Converter={StaticResource BooleanToVisibilityHelper}}" />
            <TextBlock
                Grid.Row="2"
                Grid.ColumnSpan="2"
                Margin="8,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding InitImportStatus}" />
            <Border
                Grid.Row="3"
                Grid.ColumnSpan="2"
                />
            <ScrollViewer
                Grid.Row="3"
                Grid.ColumnSpan="2"
                PreviewMouseWheel="OnPreviewMouseWheel"
                VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <controls:ImportExportSelectionControl
                        x:Name="UserImportCtrl"
                        Data="{Binding UserImportVariables}"
                        Header="User"
                        SelectionChanged="OnImportSelectionChanged"
                        Visibility="{Binding Path=HasUserImportVariables, Converter={StaticResource BooleanToVisibilityHelper}}" />
                    <controls:ImportExportSelectionControl
                        x:Name="SystemImportCtrl"
                        Data="{Binding SystemImportVariables}"
                        Header="System"
                        SelectionChanged="OnImportSelectionChanged"
                        Visibility="{Binding Path=HasSystemImportVariables, Converter={StaticResource BooleanToVisibilityHelper}}" />
                </StackPanel>
            </ScrollViewer>
            <TextBlock
                Grid.Row="4"
                Grid.ColumnSpan="2"
                Margin="8,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding ImportStatus}" />
            <StackPanel
                Grid.Row="4"
                Grid.Column="1"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    Width="100"
                    Height="32"
                    Margin="8,0"
                    Command="{Binding MergeImportCommand}"
                    Content="Merge"
                    FontSize="14"
                    IsDefault="true"
                    ToolTip="Merge conflicting enviroment variables"
                    Visibility="{Binding Path=HasImportConflicts, Converter={StaticResource BooleanToVisibilityHelper}}" />
                <Button
                    Width="100"
                    Height="32"
                    Margin="8,0"
                    Command="{Binding ImportCommand}"
                    Content="Replace"
                    FontSize="14"
                    IsDefault="true"
                    ToolTip="Replace conflicting enviroment variables"
                    Visibility="{Binding Path=HasImportConflicts, Converter={StaticResource BooleanToVisibilityHelper}}" />
                <Button
                    Width="100"
                    Height="32"
                    Margin="8,0"
                    Command="{Binding ImportDiscardCommand}"
                    Content="Discard"
                    FontSize="14"
                    IsDefault="true"
                    ToolTip="Import only non-conflicting enviroment variables"
                    Visibility="{Binding Path=HasImportConflicts, Converter={StaticResource BooleanToVisibilityHelper}}" />
                <Button
                    Width="100"
                    Height="32"
                    Margin="8,0"
                    Command="{Binding ImportCommand}"
                    Content="Import"
                    FontSize="14"
                    IsDefault="true"
                    ToolTip="Import environment variables"
                    Visibility="{Binding Path=HasImportConflicts, Converter={StaticResource BooleanToVisibilityNegationHelper}}" />
                <Button
                    Width="100"
                    Height="32"
                    Margin="8,0"
                    Command="{Binding ClearImportCommand}"
                    Content="Clear"
                    FontSize="14"
                    IsDefault="true"
                    ToolTip="Don't import anything" />
            </StackPanel>
        </Grid>
        <Grid
            x:Name="ExportGrid"
            Grid.Column="1"
            Visibility="{Binding CurrentAppMode, Converter={StaticResource ContentVisibilityHelper}, ConverterParameter=Export}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
                <RowDefinition Height="48" />
            </Grid.RowDefinitions>
            <Rectangle
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />
            <TextBlock
                Margin="10,9,0,9"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="22"
                Foreground="White"
                Text="{Binding AppModeTitle}" />
            <Border Grid.Row="1" />
            <TextBlock
                Grid.Row="1"
                Margin="8,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding InitExportStatus}" />
            <Border Grid.Row="2" />
            <ScrollViewer
                Grid.Row="2"
                PreviewMouseWheel="OnPreviewMouseWheel"
                VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <controls:ImportExportSelectionControl
                        x:Name="UserExportCtrl"
                        Data="{Binding UserExportVariables}"
                        Header="User"
                        SelectionChanged="OnExportSelectionChanged"
                        Visibility="{Binding Path=HasUserExportVariables, Converter={StaticResource BooleanToVisibilityHelper}}" />
                    <controls:ImportExportSelectionControl
                        x:Name="SystemExportCtrl"
                        Data="{Binding SystemExportVariables}"
                        Header="System"
                        SelectionChanged="OnExportSelectionChanged"
                        Visibility="{Binding Path=HasSystemExportVariables, Converter={StaticResource BooleanToVisibilityHelper}}" />
                </StackPanel>
            </ScrollViewer>
            <TextBlock
                Grid.Row="3"
                Grid.ColumnSpan="2"
                Margin="8,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding ExportStatus}" />
            <Button
                Grid.Row="3"
                Width="100"
                Height="32"
                Margin="8,0"
                HorizontalAlignment="Right"
                Command="{Binding ExportCommand}"
                Content="Export"
                FontSize="14"
                IsDefault="true" />
        </Grid>
        <Grid
            x:Name="AboutGrid"
            Grid.Column="1"
            Visibility="{Binding CurrentAppMode, Converter={StaticResource ContentVisibilityHelper}, ConverterParameter=About}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
                <RowDefinition Height="48" />
            </Grid.RowDefinitions>
            <Rectangle
                Grid.ColumnSpan="3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />
            <TextBlock
                Margin="10,9,0,9"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="22"
                Foreground="White"
                Text="{Binding AppModeTitle}" />
            <StackPanel
                Grid.Row="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Image
                    Width="400"
                    Height="128"
                    Source="/NVMSharp;component/Resources/Images/nvmsharp_title.png" />
                <TextBlock
                    Margin="60,-25,-60,25"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    Text="version 2.1" />
                <TextBlock
                    Margin="0,-10,0,10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="22"
                    Text="© 2020 Ratish Philip" />
            </StackPanel>
        </Grid>
        <wpfspark:FluidProgressBar
            Grid.ColumnSpan="2"
            Margin="0,44,0,-44"
            VerticalAlignment="Top"
            Foreground="White"
            Visibility="{Binding Path=IsProgressVisible, Converter={StaticResource BooleanToVisibilityHelper}}" />
        <Grid
            x:Name="SplitViewMenu"
            Grid.ColumnSpan="2"
            Width="48"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            ZIndex="4">
            <StackPanel
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{DynamicResource ComboBoxDropDownBackground}"
                >
                <!--  Menu (hamburger) button  -->
                <RadioButton
                    BorderThickness="0"
                    Click="OnMenuButtonClicked"
                    Style="{StaticResource SplitViewMenuButtonStyle}"
                    Tag="Menu.Glyph" />

                <!--  User button  -->
                <RadioButton
                    x:Name="UserButton"
                    BorderThickness="0"
                    Checked="OnViewUserVariables"
                    Content="User"
                    Style="{StaticResource SplitViewNavButtonStyle}"
                    Tag="User.Glyph"
                    ToolTip="User" />

                <!--  System button  -->
                <RadioButton
                    x:Name="SystemButton"
                    BorderThickness="0"
                    Checked="OnViewSystemVariables"
                    Content="System"
                    Style="{StaticResource SplitViewNavButtonStyle}"
                    Tag="System.Glyph"
                    ToolTip="System" />

                <!--  Import button  -->
                <RadioButton
                    x:Name="ImportButton"
                    BorderThickness="0"
                    Checked="OnImportVariables"
                    Content="Import"
                    Style="{StaticResource SplitViewNavButtonStyle}"
                    Tag="Import.Glyph"
                    ToolTip="Import" />

                <!--  Export button  -->
                <RadioButton
                    x:Name="ExportButton"
                    BorderThickness="0"
                    Checked="OnExportVariables"
                    Content="Export"
                    SnapsToDevicePixels="True"
                    Style="{StaticResource SplitViewNavButtonStyle}"
                    Tag="Export.Glyph"
                    ToolTip="Export" />

                <!--  About button  -->
                <RadioButton
                    x:Name="AboutButton"
                    BorderThickness="0"
                    Checked="OnAboutButtonChecked"
                    Content="About"
                    SnapsToDevicePixels="True"
                    Style="{StaticResource SplitViewNavButtonStyle}"
                    Tag="About.Glyph"
                    ToolTip="About" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>
